services:
  frontend:
    build: ../service/frontend
    container_name: frontend
    ports:
      - "8080:8080"
    depends_on:
      backend:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - PORT=8080
      - BACKEND_URL=http://backend:${BACKEND_PORT}

  backend:
    build: ../service/backend
    container_name: backend
    ports:
      - "3002:3000" # Public port to access backend for oauth2 authentication
    restart: always
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - DB_HOST=postgres
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_NAME=githubclone
      - DB_PORT=5432
      - REDIS_HOST=redis:6379
      - BACKEND_URL=${BACKEND_URL}     # Get value from .env
      - BACKEND_PORT=${BACKEND_PORT}   # Get the value from .env
      - GIT_CACHE_DIR=${GIT_CACHE_DIR} # Get the root path of the git cache
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 5s
      timeout: 2s
      retries: 15
    expose:
      - "3000"
    volumes:
      - backend_logs:/var/log/githubclone      # Persistent logging
      - gitcache:/var/lib/githubclone/gitcache # The git cache for branch and latest commit

  db:
    image: postgres:latest
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: githubclone
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d githubclone"]
      interval: 2s
      timeout: 5s
      retries: 15
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  postgres_exporter:
    image: quay.io/prometheuscommunity/postgres-exporter
    container_name: postgres_exporter
    restart: always
    ports:
      - "9187:9187"
    environment:
      - DATA_SOURCE_NAME=postgresql://user:password@postgres:5432/githubclone?sslmode=disable
    depends_on:
      - db

  redis:
    image: redis:7.2-alpine
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --save 60 1 --loglevel warning
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  redis_exporter:
    image: oliver006/redis_exporter:latest
    container_name: redis_exporter
    restart: always
    ports:
      - "9121:9121"
    command:
      - "--redis.addr=redis:6379"
    depends_on:
      - redis

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: always
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: always 
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./provisioning:/etc/grafana/provisioning

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    container_name: cadvisor
    restart: always
    ports:
      - "8081:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

volumes:
  pgdata:
  grafana_data:
  prometheus_data:
  backend_logs:
  redis-data:
  gitcache:
